[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=67.0", "setuptools_scm[toml]>=7.1"]

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
{{cookiecutter.__package_slug}} = ["py.typed"]

[tool.setuptools_scm]
fallback_version = "0.0.0-dev"
write_to = "{{cookiecutter.__package_slug}}/_version.py"

[project]
authors = [{"name" = "{{cookiecutter.author_name}}"}]
description = "{{cookiecutter.short_description}}"
dynamic = ["version"]
license = {"file" = "LICENSE"}
name = "{{cookiecutter.__package_slug}}"
readme = {file = "README.md", content-type = "text/markdown"}

dependencies = [
{%- if cookiecutter.include_sqlalchemy == "y" %}
  "aiosqlite",
  "alembic",
  "asyncpg",
{%- endif %}
{%- if cookiecutter.include_celery == "y" %}
  "celery",
{%- endif %}
{%- if cookiecutter.include_dogpile == "y" %}
  "dogpile.cache",
{%- endif %}
{%- if cookiecutter.include_fastapi == "y" %}
  "fastapi",
{%- endif %}
{%- if cookiecutter.include_jinja2 == "y" %}
  "jinja2",
{%- endif %}
{%- if cookiecutter.include_sqlalchemy == "y" %}
  "psycopg2-binary",
{%- endif %}
  "pydantic~=2.0",
  "pydantic-settings",
{%- if cookiecutter.include_quasiqueue == "y" %}
  "QuasiQueue",
{%- endif %}
{%- if cookiecutter.include_sqlalchemy == "y" %}
  "SQLAlchemy",
{%- endif %}
{%- if cookiecutter.include_celery == "y" %}
  "redis",
{%- endif %}
{%- if cookiecutter.include_cli == "y" %}
  "typer",
{%- endif %}
]

[project.optional-dependencies]
dev = [
  "build",
  "dapperdata",
  "glom",
  "mypy",
{%- if cookiecutter.include_sqlalchemy == "y" %}
  "paracelsus",
{%- endif %}
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-pretty",
  "ruamel.yaml",
  "ruff",
  "toml-sort",
{%- if cookiecutter.include_requirements_files == "y" %}
  "uv"
{% endif %}
]

{% if cookiecutter.include_cli == "y" %}
[project.scripts]
{{ cookiecutter.__package_slug }} = "{{ cookiecutter.__package_slug }}.cli:app"
{% endif %}

[tool.ruff]
exclude = [".venv", "./{{cookiecutter.__package_slug}}/_version.py"]
line-length = 120

[tool.coverage.run]
omit = [
  "./{{cookiecutter.__package_slug}}/_version.py",
  "./{{cookiecutter.__package_slug}}/__init__.py",
  "./tests/*",
]
concurrency = ["thread", "greenlet"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
plugins = ["pydantic.mypy"]
